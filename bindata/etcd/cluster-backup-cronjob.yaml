apiVersion: batch/v1
kind: CronJob
metadata:
  name: templated
  namespace: openshift-etcd
  labels:
    app: cluster-backup-job
    backup-name: templated
spec:
  schedule: "templated"
  concurrencyPolicy: "Forbid"
  failedJobsHistoryLimit: 10
  successfulJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - name: cluster-backup
              imagePullPolicy: IfNotPresent
              terminationMessagePolicy: FallbackToLogsOnError
              securityContext:
                privileged: true
              command: [ "cluster-etcd-operator" ]
              args: [ "templated" ]
              volumeMounts:
                - mountPath: /etc/kubernetes/cluster-backup
                  name: etc-kubernetes-cluster-backup
              env:
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: MY_POD_UID
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.uid
          containers:
            - name: retention
              imagePullPolicy: IfNotPresent
              terminationMessagePolicy: FallbackToLogsOnError
              # since we can expect hostPath mounts, we need to run as privileged to access them
              securityContext:
                privileged: true
              command: [ "cluster-etcd-operator" ]
              args: [ "templated" ]
          serviceAccountName: etcd-backup-sa
          nodeSelector:
            node-role.kubernetes.io/master: ""
          tolerations:
            - operator: "Exists"
          restartPolicy: OnFailure
          volumes:
            - name: etc-kubernetes-cluster-backup
              persistentVolumeClaim:
                claimName: templated
