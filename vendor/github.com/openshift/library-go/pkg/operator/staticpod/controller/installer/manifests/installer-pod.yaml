apiVersion: v1
kind: Pod
metadata:
  namespace: # Value set by operator
  name: # Value set by operator
  labels:
    app: installer
spec:
  automountServiceAccountToken: false
  serviceAccountName: installer-sa
  nodeName: # Value set by operator
  containers:
    - name: installer
      command: # Value set by operator
      args: # Value set by operator
      image: # Value set by operator
      imagePullPolicy: IfNotPresent
      securityContext:
        privileged: true
        runAsUser: 0
      env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /etc/kubernetes/
          name: kubelet-dir
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /var/lock
          name: var-lock
      resources:
        requests:
          memory: 200M
          cpu: 150m
        limits:
          memory: 200M
          cpu: 150m
  restartPolicy: Never
  priorityClassName: system-node-critical
  tolerations:
  - operator: "Exists"
  securityContext:
    runAsUser: 0
  volumes:
    - hostPath:
        path: /etc/kubernetes/
      name: kubelet-dir
    - hostPath:
        path: /var/lock
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
